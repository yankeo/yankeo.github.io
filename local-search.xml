<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CCF-CSP认证</title>
    <link href="/2024/05/09/CCF-CSP%E8%AE%A4%E8%AF%81/"/>
    <url>/2024/05/09/CCF-CSP%E8%AE%A4%E8%AF%81/</url>
    
    <content type="html"><![CDATA[<!-- 摘要： --><p>记录准备CSP的备考刷题过程</p><span id="more"></span><!-- 正文： --><h2 id="矩阵运算"><a href="#矩阵运算" class="headerlink" title="矩阵运算"></a>矩阵运算</h2><p><img src="https://yankeo.oss-cn-beijing.aliyuncs.com/blog_pic/202405141643540.webp" alt="题目"><br><img src="https://yankeo.oss-cn-beijing.aliyuncs.com/blog_pic/202405141644333.webp" alt="样例输入"></p><h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><div class="note note-secondary">            <p>70分解题：</p>          </div><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs prolog">#include &lt;iostream&gt;<br>using namespace std;<br><br>int main()<br>&#123;<br>    int n, m;<br>    cin &gt;&gt; n &gt;&gt; m;<br><br>    long long q[n][m];<br>    long long k[n][m];<br>    long long v[n][m];<br>    long long w[n];<br>    for(int i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>        for(int j = <span class="hljs-number">0</span>; j &lt; m; j++)<br>            cin &gt;&gt; q[i][j];<br>    for(int i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>        for(int j = <span class="hljs-number">0</span>; j &lt; m; j++)<br>            cin &gt;&gt; k[i][j];<br>    for(int i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>        for(int j = <span class="hljs-number">0</span>; j &lt; m; j++)<br>            cin &gt;&gt; v[i][j];<br>    for(int i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>        cin &gt;&gt; w[i];<br><br>    long long temp[n][n];<br>    for(int i = <span class="hljs-number">0</span>; i &lt; n; i++)&#123;<br>        for(int j = <span class="hljs-number">0</span>; j &lt; n; j++)&#123;<br>            long long tempnum = <span class="hljs-number">0</span>;<br>            for(int x = <span class="hljs-number">0</span>; x &lt; m; x++)&#123;<br>                tempnum = tempnum + (q[i][x] * k[j][x]);<br>            &#125;<br>            temp[i][j] = tempnum * w[i];<br>        &#125;<br>    &#125;<br><br>    long long res[n][m];<br>    for(int i = <span class="hljs-number">0</span>; i &lt; n; i++)&#123;<br>        for(int j = <span class="hljs-number">0</span>; j &lt; m; j++)&#123;<br>            long long tempnum = <span class="hljs-number">0</span>;<br>            for(int x = <span class="hljs-number">0</span>; x &lt; n; x++)&#123;<br>                tempnum = tempnum + (temp[i][x] * v[x][j]);<br>            &#125;<br>            res[i][j] = tempnum;<br>        &#125;<br>    &#125;<br><br>    for(int i = <span class="hljs-number">0</span>; i &lt; n; i++)&#123;<br>        for(int j = <span class="hljs-number">0</span>; j &lt; m; j++)&#123;<br>            cout &lt;&lt; res[i][j] &lt;&lt; <span class="hljs-string">&#x27; &#x27;</span>;<br>        &#125;<br>        cout &lt;&lt; endl;<br>    &#125;<br><br>    return <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="优化思路"><a href="#优化思路" class="headerlink" title="优化思路"></a>优化思路</h3><div class="note note-success">            <p>优化思路很容易想到矩阵连乘问题，适当调换运算顺序能够大幅减小复杂度。</p>          </div><p>矩阵Q[n*d] × K[d*n] × V[n*d] ，如果先算Q×K得到[n*n]的矩阵temp[n*n]，然后与V相乘，复杂度会是（n*n*d）。（ <em><strong>题目中提到n是远大于d的</strong></em>）当我们调换运算后，先算K×V得到[d*d]的矩阵然后与V相乘，复杂度是（n*d*d），从而减少运行时间。</p><div class="note note-primary">            <p>满分解题：</p>          </div><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs prolog">#include &lt;iostream&gt;<br>#include &lt;bits/stdc++.h&gt;<br>using namespace std;<br><br>int main()<br>&#123;<br>    int n, d;<br>    cin &gt;&gt; n &gt;&gt; d;<br><br>    long long q[n][d];<br>    long long k[n][d];<br>    long long v[n][d];<br>    long long w[n];<br>    for(int i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>        for(int j = <span class="hljs-number">0</span>; j &lt; d; cin &gt;&gt; q[i][j++]);<br>    for(int i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>        for(int j = <span class="hljs-number">0</span>; j &lt; d; cin &gt;&gt; k[i][j++]);<br>    for(int i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>        for(int j = <span class="hljs-number">0</span>; j &lt; d; cin &gt;&gt; v[i][j++]);<br>    for(int i = <span class="hljs-number">0</span>; i &lt; n; cin &gt;&gt; w[i++]);<br><br><br>    long long temp[d][d];<br>    for(int i = <span class="hljs-number">0</span>; i &lt; d; i++)&#123;<br>        for(int j = <span class="hljs-number">0</span>; j &lt; d; j++)&#123;<br>            long long tempnum = <span class="hljs-number">0</span>;<br>            for(int x = <span class="hljs-number">0</span>; x &lt; n; x++)&#123;<br>                tempnum = tempnum + (k[x][i] * v[x][j]);<br>            &#125;<br>            temp[i][j] = tempnum;<br>        &#125;<br>    &#125;<br><br>    long long res[n][d];<br>    for(int i = <span class="hljs-number">0</span>; i &lt; n; i++)&#123;<br>        for(int j = <span class="hljs-number">0</span>; j &lt; d; j++)&#123;<br>            long long tempnum = <span class="hljs-number">0</span>;<br>            for(int x = <span class="hljs-number">0</span>; x &lt; d; x++)&#123;<br>                tempnum = tempnum + (q[i][x] * temp[x][j]);<br>            &#125;<br>            res[i][j] = tempnum * w[i];<br>        &#125;<br>    &#125;<br><br>    for(int i = <span class="hljs-number">0</span>; i &lt; n; i++)&#123;<br>        for(int j = <span class="hljs-number">0</span>; j &lt; d; j++)&#123;<br>            cout &lt;&lt; res[i][j] &lt;&lt; <span class="hljs-string">&#x27; &#x27;</span>;<br>        &#125;<br>        cout &lt;&lt; endl;<br>    &#125;<br><br>    return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="垦田计划"><a href="#垦田计划" class="headerlink" title="垦田计划"></a>垦田计划</h2><p><img src="https://yankeo.oss-cn-beijing.aliyuncs.com/blog_pic/202405151058047.webp" alt="题目描述"><br><img src="https://yankeo.oss-cn-beijing.aliyuncs.com/blog_pic/202405151059693.webp" alt="样例1"><br><img src="https://yankeo.oss-cn-beijing.aliyuncs.com/blog_pic/202405151100673.webp" alt="样例2"></p><h3 id="解题-1"><a href="#解题-1" class="headerlink" title="解题"></a>解题</h3><div class="note note-secondary">            <p>70分解题：</p>          </div><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs inform7">#include &lt;iostream&gt;<br>using namespace std;<br><br>int main()<br>&#123;<br>    int n, m, k;<br>    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;<br><br>    int arr<span class="hljs-comment">[n]</span><span class="hljs-comment">[2]</span>;<br>    for(int i = 0; i &lt; n; cin &gt;&gt; arr<span class="hljs-comment">[i]</span><span class="hljs-comment">[0]</span> &gt;&gt; arr<span class="hljs-comment">[i++]</span><span class="hljs-comment">[1]</span>);<br>    <br>    // 每次循环都将资源用于减少最长开垦天数<br>    while(m&gt;0)&#123;<br>        int maxindex = 0;<br>        for(int i = 1; i &lt; n; i++)&#123;<br>            if(arr<span class="hljs-comment">[i]</span><span class="hljs-comment">[0]</span> &gt; arr<span class="hljs-comment">[maxindex]</span><span class="hljs-comment">[0]</span>)<br>                maxindex = i;<br>        &#125;<br>        arr<span class="hljs-comment">[maxindex]</span><span class="hljs-comment">[0]</span>--;<br>        m -= arr<span class="hljs-comment">[maxindex]</span><span class="hljs-comment">[1]</span>;<br>    &#125;<br><br>    int ans = k;<br>    for(int i = 0; i &lt; n; i++)<br>        if(arr<span class="hljs-comment">[i]</span><span class="hljs-comment">[0]</span> &gt; ans)<br>            ans = arr<span class="hljs-comment">[i]</span><span class="hljs-comment">[0]</span>;<br>    cout &lt;&lt; ans;<br>    return 0;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="优化思路-1"><a href="#优化思路-1" class="headerlink" title="优化思路"></a>优化思路</h3><div class="note note-success">            <p>很明显复杂度高的原因在于循环查找最高开垦天数，因此想到使用哈希表来加快这个过程，其实就是空间换时间</p>          </div><p>可以直接使用数组：arr[ti] &#x3D; ci 来创建哈希表，也可以使用下面的方式</p><div class="note note-secondary">            <p>满分解题：</p>          </div><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n, m, k;<br>    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;<br>    <br>    <span class="hljs-comment">// 记录最大开垦时长的土地天数</span><br>    <span class="hljs-type">int</span> maxnum = <span class="hljs-number">0</span>;<br>    unordered_map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt; hashmap;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)&#123;<br>        <span class="hljs-type">int</span> a, b;<br>        cin &gt;&gt; a &gt;&gt; b;<br>        <span class="hljs-comment">// 在存储的时候，利用哈希表合并同样开垦时间土地所需的资源</span><br>        <span class="hljs-keyword">if</span>(hashmap.<span class="hljs-built_in">find</span>(a) == hashmap.<span class="hljs-built_in">end</span>())&#123;<br>            hashmap[a] = b;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            hashmap[a] += b;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(a &gt; maxnum)&#123;<br>            maxnum = a;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">while</span>(m&gt;<span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-comment">// 每次循环都将资源用于减少当前最长开垦天数的土地</span><br>        m -= hashmap[maxnum];<br>        <span class="hljs-comment">// 最长开垦天数减少之后，更新哈希表</span><br>        hashmap[maxnum<span class="hljs-number">-1</span>] += hashmap[maxnum];<br>        hashmap.<span class="hljs-built_in">erase</span>(maxnum--);<br>    &#125;<br>    <br>    <span class="hljs-comment">// 最后判断如果m小于0，说明剩余资源不足以减少最长开垦天数，所以要+1</span><br>    <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">0</span>)&#123;<br>        cout &lt;&lt; maxnum+<span class="hljs-number">1</span>;<br>    &#125; <span class="hljs-keyword">else</span> cout &lt;&lt; maxnum;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><hr><div class="note note-warning">            <p>转载请注明出处，否则我会生气！</p>          </div>]]></content>
    
    
    
    <tags>
      
      <tag>CSP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>django学习</title>
    <link href="/2024/04/22/django%E5%AD%A6%E4%B9%A0/"/>
    <url>/2024/04/22/django%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<!-- 摘要： --><span id="more"></span><!-- 正文： --><p><img src="https://yankeo.oss-cn-beijing.aliyuncs.com/blog_pic/202404211340795.jpg" alt="test"></p>]]></content>
    
    
    <categories>
      
      <category>Django</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Django</tag>
      
      <tag>react</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo常用命令</title>
    <link href="/2024/04/22/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2024/04/22/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>hexo常用命令记录</p><span id="more"></span><h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type"></span>[layout] &lt;title&gt;   <span class="hljs-comment">//layout是scaffolds下的布局</span><br>-p, –path自定义新文章的路径<br>hexo <span class="hljs-keyword">new</span> <span class="hljs-type">draft</span> <span class="hljs-string">&quot;xxx title&quot;</span> <span class="hljs-comment">//新建草稿</span><br>hexo publish [layout] &lt;filename&gt; <span class="hljs-comment">//发布草稿</span><br></code></pre></td></tr></table></figure><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs 1c">hexo clean  <span class="hljs-comment">// 清理缓存</span><br>hexo g  <span class="hljs-comment">//生成</span><br>hexo d <span class="hljs-comment">// 构建</span><br>hexo g -d <span class="hljs-comment">//组合操作</span><br>hexo s  <span class="hljs-comment">// 启动本地服务</span><br></code></pre></td></tr></table></figure><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>安全模式：不载入插件和脚本</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">hexo <span class="hljs-comment">--safe</span><br></code></pre></td></tr></table></figure><p>简洁模式：隐藏终端信息</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">hexo <span class="hljs-comment">--silent</span><br></code></pre></td></tr></table></figure><p>调试模式：在终端中显示调试信息并记录到 debug.log</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> --<span class="hljs-literal">debug</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo插件</title>
    <link href="/2024/04/22/Hexo%E6%8F%92%E4%BB%B6/"/>
    <url>/2024/04/22/Hexo%E6%8F%92%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<!-- 摘要： --><p>Hexo常用插件</p><span id="more"></span><h2 id="hexo-all-minifier"><a href="#hexo-all-minifier" class="headerlink" title="hexo-all-minifier"></a>hexo-all-minifier</h2><p>用于压缩hexo生成的静态页面<br>安装：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-<span class="hljs-keyword">all</span>-minifier <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>配置(_config.yml):</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 代码压缩插件hexo-all-minifier</span><br><span class="hljs-attr">all_minifier:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-attr">html_minifier:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">ignore_error:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">exclude:</span><br>  <br><span class="hljs-attr">css_minifier:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">exclude:</span> <br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;*.min.css&#x27;</span><br><br><span class="hljs-attr">js_minifier:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">mangle:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">output:</span><br>  <span class="hljs-attr">compress:</span><br>  <span class="hljs-attr">exclude:</span> <br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;*.min.js&#x27;</span><br><br><span class="hljs-attr">image_minifier:</span> <br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 图片不压缩</span><br>  <span class="hljs-attr">interlaced:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">multipass:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">optimizationLevel:</span> <span class="hljs-number">2</span><br>  <span class="hljs-attr">pngquant:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">progressive:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fluid主题美化</title>
    <link href="/2024/04/19/Fluid%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/"/>
    <url>/2024/04/19/Fluid%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<!-- 摘要： --><p>记录一下使用Fluid主题的美化过程</p><span id="more"></span><!-- 正文： --><h2 id="Fluid自定义样式"><a href="#Fluid自定义样式" class="headerlink" title="Fluid自定义样式"></a>Fluid自定义样式</h2><p>不建议直接修改theme文件夹下的文件，所有修改尽量通过引入自定义样式或使用注入代码的方式完成，方便之后更新主题，如不考虑更新可忽略。首先在fluid&#x2F;source文件夹下新建userstyle文件夹，该文件夹下新建js、css文件夹用于存放样式文件。</p><h2 id="新增网站运行时间"><a href="#新增网站运行时间" class="headerlink" title="新增网站运行时间"></a>新增网站运行时间</h2><ul><li>_config.fluid.yml文件的footer配置项下新增：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;website_runtime&quot;</span>&gt;</span>计算网站运行时间...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">br</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>userstyle&#x2F;js文件夹下新增js文件：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 获取当前日期时间</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getCurrentDateTime</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br>&#125;<br><br><span class="hljs-comment">// 获取网站开始运行的日期时间</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getStartDate</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 这里可以替换为网站开始运行的确切日期和时间</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&quot;2023-04-19T18:04:05&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">// 计算网站运行时间并显示在页面上</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">calculateRuntime</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> startDate = <span class="hljs-title function_">getStartDate</span>();<br>    <span class="hljs-keyword">var</span> currentDate = <span class="hljs-title function_">getCurrentDateTime</span>();<br>    <br>    <span class="hljs-comment">// 计算两个日期之间的毫秒数差值</span><br>    <span class="hljs-keyword">var</span> uptime = currentDate.<span class="hljs-title function_">getTime</span>() - startDate.<span class="hljs-title function_">getTime</span>();<br>    <span class="hljs-comment">// 将毫秒数转换为天、小时、分钟和秒数</span><br>    <span class="hljs-keyword">var</span> totalSeconds = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(uptime / <span class="hljs-number">1000</span>);<br>    <span class="hljs-keyword">var</span> days = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(totalSeconds / (<span class="hljs-number">24</span> * <span class="hljs-number">3600</span>));<br>    totalSeconds %= <span class="hljs-number">24</span> * <span class="hljs-number">3600</span>;<br>    <span class="hljs-keyword">var</span> hours = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(totalSeconds / <span class="hljs-number">3600</span>);<br>    totalSeconds %= <span class="hljs-number">3600</span>;<br>    <span class="hljs-keyword">var</span> minutes = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(totalSeconds / <span class="hljs-number">60</span>);<br>    <span class="hljs-keyword">var</span> seconds = totalSeconds % <span class="hljs-number">60</span>;<br>    <br>    <span class="hljs-comment">// 添加前导零以确保时、分、秒始终为两位数</span><br>    hours = (hours &lt; <span class="hljs-number">10</span>) ? <span class="hljs-string">&quot;0&quot;</span> + hours : hours;<br>    minutes = (minutes &lt; <span class="hljs-number">10</span>) ? <span class="hljs-string">&quot;0&quot;</span> + minutes : minutes;<br>    seconds = (seconds &lt; <span class="hljs-number">10</span>) ? <span class="hljs-string">&quot;0&quot;</span> + seconds : seconds;<br>    <br>    <span class="hljs-comment">// 构建显示运行时间的字符串</span><br>    <span class="hljs-keyword">var</span> runtimeString = <span class="hljs-string">`本站已夹缝生存 <span class="hljs-subst">$&#123;days&#125;</span> 天 <span class="hljs-subst">$&#123;hours&#125;</span> 小时 <span class="hljs-subst">$&#123;minutes&#125;</span> 分 <span class="hljs-subst">$&#123;seconds&#125;</span> 秒`</span>;<br>    <br>    <span class="hljs-comment">// 更新网页中显示运行时间的标签内容</span><br>    <span class="hljs-keyword">var</span> runtimeElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;website_runtime&quot;</span>);<br>    <span class="hljs-keyword">if</span> (runtimeElement) &#123;<br>        runtimeElement.<span class="hljs-property">textContent</span> = runtimeString;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">// 在页面加载完毕后计算并显示运行时间</span><br><span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;load&quot;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title function_">calculateRuntime</span>();<br>    <span class="hljs-comment">// 设置定时器每秒更新一次运行时间</span><br>    <span class="hljs-built_in">setInterval</span>(calculateRuntime, <span class="hljs-number">1000</span>);<br>&#125;);<br><br></code></pre></td></tr></table></figure></li><li>通过userstyle&#x2F;css中新建css文件自定义样式：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#website_runtime</span> &#123;<br><span class="hljs-attribute">font-size</span>: <span class="hljs-number">12px</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>在_config.fluid.yml文件中对应位置声明样式文件的路径：<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">custom_js:</span><br>  - <span class="hljs-keyword">/userstyle/</span>js/runtime.js<br><span class="hljs-symbol">custom_css:</span><br>  - <span class="hljs-keyword">/userstyle/</span>css/runtime.css<br></code></pre></td></tr></table></figure></li></ul><h2 id="更换鼠标指针"><a href="#更换鼠标指针" class="headerlink" title="更换鼠标指针"></a>更换鼠标指针</h2><ul><li><p>下载鼠标样式文件，一般为.cur文件。</p></li><li><p>新增样式文件mouse.css。</p></li><li><p>如上面所示引入css即可</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 全局箭头 */</span><br><span class="hljs-selector-tag">body</span>, <span class="hljs-selector-class">.banner</span> &#123; <br><span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">/img/Arrow.cur</span>),auto;<span class="hljs-comment">/* url地址可以是链接，相对位置，绝对位置 */</span><br>&#125;<br><span class="hljs-comment">/* 所有可跳转链接, 封面向下部分, 代码复制按钮 */</span><br><span class="hljs-selector-tag">a</span>, <span class="hljs-selector-tag">button</span>, <span class="hljs-selector-class">.scroll-down-bar</span>, <span class="hljs-selector-class">.copy-btn</span> &#123;<br><span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">/img/Hand.cur</span>),auto <span class="hljs-meta">!important</span>;<br>&#125;<br><span class="hljs-comment">/* 搜索框、输入框 */</span><br><span class="hljs-selector-tag">input</span>, <span class="hljs-selector-tag">textarea</span> &#123;<br><span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">/img/IBeam.cur</span>),auto;    <span class="hljs-comment">/* 这里应该是竖条光标 */</span><br>&#125;<br><span class="hljs-comment">/* 图片放大 */</span><br><span class="hljs-selector-class">.fancybox-image</span> &#123;<br><span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">/img/SizeAll.cur</span>),auto;<br>&#125;<br></code></pre></td></tr></table></figure><p>参考(<a href="https://asteri5m.gitee.io/archives/Fluid%E9%AD%94%E6%94%B9%E7%AC%94%E8%AE%B0.html">Fluid魔改笔记 - Asteri5m (gitee.io)</a>)</p><hr><div class="note note-warning">            <p>转载请注明出处，否则我会生气！</p>          </div>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>美化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>简单语法</title>
    <link href="/2024/04/12/hello-world/"/>
    <url>/2024/04/12/hello-world/</url>
    
    <content type="html"><![CDATA[<!-- 摘要： --><p>一些常用语法</p><span id="more"></span><!-- 正文： --><h3 id="markdown语法"><a href="#markdown语法" class="headerlink" title="markdown语法"></a>markdown语法</h3><hr><div class="note note-success">            <p>文字 或者 <code>markdown</code> 均可</p>          </div><p>可选便签：primary、secondary、success、danger、warning、info、light</p><span class="label label-primary">test</span><span class="label label-warning">warn</span><p>可选label：primary、default、success、danger、warning、info</p>    <div class="fold">      <div class="fold-title fold-danger collapsed" data-toggle="collapse" href="#collapse-b5714680" role="button" aria-expanded="false" aria-controls="collapse-b5714680">        <div class="fold-arrow">▶</div>折叠块      </div>      <div class="fold-collapse collapse" id="collapse-b5714680">        <div class="fold-content">          <p>需要折叠的一段内容，支持 markdown</p>        </div>      </div>    </div><p>可选折叠块：primary、secondary、success、danger、warning、info、light</p>            <input type="checkbox"  checked="checked">可选框          <a class="btn" href="url"  title="title" target="_blank">按钮</a><h4 id="组图："><a href="#组图：" class="headerlink" title="组图："></a>组图：</h4><div class="note note-info">            <p>% gi 总张数 第一行-第二行-第三行-…… %</p>          </div><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="/url"></div><div class="group-image-wrap"><img src="/url"></div><div class="group-image-wrap"><img src="/url"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="/url"></div><div class="group-image-wrap"><img src="/url"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="/url"></div></div></div>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
